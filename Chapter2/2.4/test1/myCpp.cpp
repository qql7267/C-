#include <iostream>
#include <cmath> // <math.h>
/*
由于函数用于创建C++程序的模块 对C++的OOP定义至关重要 所以必须熟悉他
现在来了解一些函数的基本知识
*/
int main()
{
	using namespace std;

	/*
	有返回值的函数将生成一个值 而这个值可赋给变量或在其他表达式中使用
	如 标准C/C++库包含一个名为sqrt()的函数 他返回平方根
	假如要计算6.25的平方根 然后将这个值赋给变量x 则可以有如下写法
	*/
	double x = sqrt(6.25);
	/*
	表达式sqrt(6.25)将调用sqrt()函数 
	sqrt(6.25)被称为函数调用 被调用的函数叫做被调用函数(called function)
	圆括号中的值(这里指6.25)是发送给函数的信息 被称为传递给函数 以这种方式发给函数的值叫做参数
	函数sqrt()得到的结果为2.5 并将这个值发给调用函数
	发送回去的值叫做函数的返回值(return value)
	可以这么认为 函数执行完毕后 语句中的函数调用部分将被替换为返回的值 因此 这个例子将返回值赋给变量x
	简言之 参数是发送给函数的信息 返回值是从函数中发送回去的值
	*/
	/*
	情况基本上就是这样 只是在使用函数前 C++编译器必须知道函数的参数类型和返回值类型
	也就是说 函数是返回整数、字符、小数等 如果缺少这些信息 编译器将不知道如何解释返回值
	C++提供这种信息的方式是使用函数原型语句
	*/
	/*
	函数原型之于函数就像变量声明之于变量 指出涉及的类型
	例如 C++库将sqrt()函数定义成将一个(可能)带小数部分的数字(如6.25)作为参数 并返回一个相同类型的数字
	有些语言将这些数字称作实数 但是C++将这种类型称作double
	*/
	double x1;
	x1 = sqrt(6.25);

	double area;
	cout << "Enter the floor area, in square feet, of your home: ";
	cin >> area;
	double side;
	//sqrt()函数 是通过包含cmath文件来提供该函数的原型
	side = sqrt(area);
	cout << "That's the equivalent of a square " << side
		<< "feet to the side." << endl;
	cout << "How fascination!" << endl;

	/*
	原型的结尾的分好表明他是一条语句 这使得他是一个原型 而不是函数头
	如果省略分号 编译器将把这样代码解释为一个函数头 并要求接着提供定义该函数的函数体
	*/
	/*
	在程序中使用sqrt()时 也必须提供原型
	原型 double sqrt(6.25);
	有两种方法来实现
	1在源代码文件中输入函数原型
	2包含在头文件cmath(老系统为math.h) 其中定义了原型
	第二种方法更好 因为头文件能有可能使原型正确 对于C++库中的每个函数 都在一个或多个头文件中提供了其原型
	*/
	/*
	不要混淆函数原型和函数兴义 原型只描述函数接口 也就是说 他描述的是发送给函数的信息和返回的信息
	应在首次使用哈数之前提供其原型 通常的做法是吧原型放到main()函数定义的前面
	*/
	/*
	有些函数需要多想信息 这些函数使用多个参数 参数间用逗号分开
	如 数学函数pow()接收两个参数 返回值以第一个参数为第 第二个参数为指数的幂
	原型 double pow(double, double);
	*/
	double answer = pow(5.0, 8.0);
	/*
	另外有些函数不接受任何参数
	如 有一个C库(与cstdlib或stdlib,h头文件相关的库)包含一个rand()函数
	该函数不接受任何参数 并返回一个随机整数
	原型 int rand(void);
	关键字void表明 该函数不接受任何参数
	如果省略void 让括号为空 则C++将其解释为一个不接受任何参数的隐式声明
	*/
	int myGuess = rand();
	/*
	还有一些函数没有返回值 
	由于这个函数吧值发送给屏幕 而不是调用程序 因此不用返回值
	可以在原型中使用关键字void来表明返回类型 以指出函数没有返回值
	如 bucks()函数（自己定义的）
	*/
	void bucks(double);
	/*
	由于他不返回值 因此不能将该函数调用放在赋值语句或其他表达式中
	相反 用使用一条存才的函数调用语句
	*/
	bucks(1234.56);
	/*
	在有些语言中 有返回值的函数被称为函数(function)
	没有返回值的函数被称为过程(procedure)或子程序(subroutine)
	但C++与C一样 这两种辩题都被称为函数
	*/

	return 0;
}